@page "/chatbox"
@rendermode InteractiveWebAssembly
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@using System.Collections.Generic
@using System.Linq
@using System.Threading.Tasks
@using System
@using System.Timers

<PageTitle>ChatGPT Chatbox</PageTitle>

<div class="chatbox-container">
    <h1>ChatGPT Chatbox with Azure Search</h1>

    <div class="conversation-info">
        <div class="info-item">
            <strong>Conversation ID:</strong> <span class="conversation-id">@conversationId</span>
        </div>
        <div class="info-item">
            <strong>Questions:</strong> <span class="question-count">@questionCount / @maxQuestions</span>
        </div>
        <div class="action-buttons">
            <button class="btn btn-secondary btn-sm" @onclick="NewConversation">New Conversation</button>
            <button class="btn btn-warning btn-sm" @onclick="ResetConversation">Reset</button>
        </div>
    </div>

    <div class="chat-messages" @ref="messagesContainer">
        <!-- Check if messages is not null before iterating -->
        @if (messages != null)
        {
            @foreach (var message in messages)
            {
                <div class="message @message.Type">
                    <div class="message-header">
                        <strong>@(message.Type == "user" ? "You" : "Assistant")</strong>
                        <span class="timestamp">@message.Timestamp.ToString("HH:mm:ss")</span>
                    </div>
                    <div class="message-content">@message.Content</div>
                    @if (message.Citations != null && message.Citations.Count > 0)
                    {
                        <div class="citations">
                            <strong>Sources:</strong>
                            <ul>
                                <!-- Check if message.Citations is not null -->
                                @foreach (var citation in message.Citations)
                                {
                                    <li>
                                        <strong>@citation.Title</strong> - @citation.FilePath (Score: @citation.Score.ToString("F4"))
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        }
        @if (isLoading)
        {
            <div class="message assistant loading">
                <div class="message-content">
                    <div class="spinner-border spinner-border-sm" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    Processing...
                </div>
            </div>
        }
    </div>

    <div class="input-section">
        <div class="input-mode-selector">
            <label>
                <input type="radio" name="mode" value="single" checked="@(inputMode == "single")" @onchange='() => inputMode = "single"' />
                Single Question
            </label>
            <label>
                <input type="radio" name="mode" value="multiple" checked="@(inputMode == "multiple")" @onchange='() => inputMode = "multiple"' />
                Multiple Questions
            </label>
        </div>

        @if (inputMode == "single")
        {
            <div class="single-question-input">
                <textarea class="form-control" 
                          placeholder="Enter your question..." 
                          @bind="currentQuestion" 
                          @bind:event="oninput"
                          rows="3"
                          disabled="@isLoading"></textarea>
                <button class="btn btn-primary" @onclick="AskSingleQuestion" disabled="@(isLoading || string.IsNullOrWhiteSpace(currentQuestion))">
                    Send Question
                </button>
            </div>
        }
        else
        {
            <div class="multiple-questions-input">
                <div class="questions-list">
                    @for (int i = 0; i < multipleQuestions.Count; i++)
                    {
                        var index = i;
                        <div class="question-item">
                            <input type="text" 
                                   class="form-control" 
                                   placeholder="@($"Question {index + 1}")" 
                                   @bind="multipleQuestions[index]" 
                                   @bind:event="oninput"
                                   disabled="@isLoading" />
                            <button class="btn btn-danger btn-sm" @onclick="() => RemoveQuestion(index)" disabled="@isLoading">Ã—</button>
                        </div>
                    }
                </div>
                <div class="multiple-actions">
                    <button class="btn btn-secondary btn-sm" @onclick="AddQuestion" disabled="@isLoading">Add Question</button>
                    <button class="btn btn-primary" @onclick="AskMultipleQuestions" disabled="@(isLoading || !multipleQuestions.Any(q => !string.IsNullOrWhiteSpace(q)))">
                        Send All Questions
                    </button>
                </div>
            </div>
        }
    </div>

    @if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @errorMessage
            <button type="button" class="btn-close" @onclick='() => errorMessage = ""'></button>
        </div>
    }
</div>
